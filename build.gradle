buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.0-SNAPSHOT'
    }
}

repositories {
    ivy {
        name 'CB FS'
        artifactPattern "http://www.chickenbones.craftsaddle.org/Files/New_Versions/1.6.4/[module]-dev%20[revision].[ext]"
    }
}

apply plugin: 'forge'

configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

dependencies {
    compile name: 'CodeChickenCore', version: "${config.ccc_version}", ext: 'jar'
    compile name: 'NotEnoughItems', version: "${config.nei_version}", ext: 'jar'
    provided fileTree(dir: 'libs', include: '*.jar')
}

def getVersion = {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null
    }
}

version = getVersion()
group= "com.redrockfowl.ex-nihilo-nei"
archivesBaseName = "ex-nihilo-nei"

minecraft {
    version = "${config.mc_version}-9.11.1.964"
    replace '${version}', project.version
    replace '${modid}', project.archivesBaseName
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand ( 'version': project.version
               , 'mcversion': project.minecraft.version
               )
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

